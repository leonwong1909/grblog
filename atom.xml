<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://github.com/leonwong1909/grblog</id>
    <title>Iamsssb</title>
    <updated>2023-03-28T05:38:46.396Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://github.com/leonwong1909/grblog"/>
    <link rel="self" href="https://github.com/leonwong1909/grblog/atom.xml"/>
    <subtitle>Iamsssb</subtitle>
    <logo>https://github.com/leonwong1909/grblog/images/avatar.png</logo>
    <icon>https://github.com/leonwong1909/grblog/favicon.ico</icon>
    <rights>All rights reserved 2023, Iamsssb</rights>
    <entry>
        <title type="html"><![CDATA[测试]]></title>
        <id>https://github.com/leonwong1909/grblog/post/ce-shi/</id>
        <link href="https://github.com/leonwong1909/grblog/post/ce-shi/">
        </link>
        <updated>2023-03-28T04:58:29.000Z</updated>
        <content type="html"><![CDATA[<p>测试测试测试测试测试测试测试测试测试测试测试</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nginx配置记录]]></title>
        <id>https://github.com/leonwong1909/grblog/post/202303281257/</id>
        <link href="https://github.com/leonwong1909/grblog/post/202303281257/">
        </link>
        <updated>2023-03-28T04:54:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="安装gcc">安装gcc</h3>
<pre><code class="language-shell">sudo yum install gcc-c++

sudo apt install gcc openssl openssl-devel
sudo apt install libpcre3 libpcre3-dev
sudo apt install libssl-dev
sudo apt install zlib1g zlib1g-dev
</code></pre>
<h3 id="编译安装">编译安装</h3>
<pre><code class="language-shell">./configure --user=root --group=root --prefix=/data/nginx --with-http_stub_status_module --with-http_gzip_static_module --with-http_realip_module --with-http_sub_module --with-http_ssl_module
</code></pre>
<h3 id="其他编译">其他编译</h3>
<pre><code class="language-shell">./configure --prefix=/data/nginx --with-http_ssl_module --with-http_stub_status_module --with-pcre

-- prefix 参数指定了 Nginx 安装目录的路径，这里设置为 /usr/local/nginx。
-- with-http_ssl_module 参数启用了 Nginx 的 SSL 功能，使其支持 HTTPS 协议。
-- with-http_stub_status_mo
</code></pre>
<h2 id="报错">报错</h2>
<h3 id="描述">描述</h3>
<pre><code class="language-bash">./configure: error: the HTTP rewrite module requires the PCRE library.
You can either disable the module by using --without-http_rewrite_module
option, or install the PCRE library into the system, or build the PCRE library
statically from the source with nginx by using --with-pcre=&lt;path&gt; option.
</code></pre>
<h3 id="原因">原因</h3>
<p>缺少<code>prce</code>和<code>pcre-devel</code></p>
<h3 id="解决centos7">解决(centos7)</h3>
<pre><code class="language-bash">-- 安装prce和pcre-devel
./configure --prefix=/usr/local/nginx --with-pcre=/usr/local/pcre
</code></pre>
<ul>
<li><code>--prefix</code>：选择nginx要安装的目录</li>
<li><code>--with-pcre</code>：选择pcre的<strong>源码</strong>所在目录</li>
</ul>
<h3 id="解决ubuntu">解决(ubuntu)</h3>
<pre><code class="language-bash">sudo apt install libpcre3 libpcre3-dev
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[防火墙配置]]></title>
        <id>https://github.com/leonwong1909/grblog/post/202303281226/</id>
        <link href="https://github.com/leonwong1909/grblog/post/202303281226/">
        </link>
        <updated>2023-03-28T04:50:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="防火墙基本配置">防火墙基本配置</h2>
<h3 id="查看防火墙版本">查看防火墙版本</h3>
<pre><code>firewall-cmd --version
</code></pre>
<h3 id="启动">启动</h3>
<pre><code>systemctl start firewalld
</code></pre>
<h3 id="关闭">关闭</h3>
<pre><code>systemctl stop firewalld
</code></pre>
<h3 id="重启">重启</h3>
<pre><code>systemctl restart firewalld
</code></pre>
<h3 id="状态">状态</h3>
<pre><code>systemctl status firewalld
</code></pre>
<h3 id="查看当前规则">查看当前规则</h3>
<pre><code>firewall-cmd --list-all
</code></pre>
<h3 id="查看开放的端口">查看开放的端口</h3>
<pre><code>firewall-cmd --list-port
</code></pre>
<h3 id="查看开放的端口-2">查看开放的端口</h3>
<pre><code>firewall-cmd --zone=public --list-ports
</code></pre>
<h2 id="添加白名单与端口">添加白名单与端口</h2>
<h3 id="添加白名单">添加白名单</h3>
<pre><code class="language-shell">firewall-cmd --permanent --add-rich-rule 'rule family=ipv4 source address=19.105.194.151 port port=1521 protocol=tcp accept'
</code></pre>
<h3 id="移除规则">移除规则</h3>
<pre><code class="language-shell">firewall-cmd --permanent --remove-rich-rule='rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;8080&quot; accept'
</code></pre>
<h3 id="添加黑名单">添加黑名单</h3>
<pre><code class="language-shell">firewall-cmd --permanent --add-rich-rule='rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;8080&quot; reject'
</code></pre>
<h2 id="根据服务开放">根据服务开放</h2>
<pre><code class="language-shell">firewall-cmd --permanent --add-service=http
</code></pre>
<h2 id="测试工具traceroute">测试工具traceroute</h2>
<pre><code class="language-sql">traceroute www.badu.com
traceroute -d IP
</code></pre>
<h2 id="放开端口">放开端口</h2>
<pre><code class="language-shell">firewall-cmd --zone=public --add-port=22/tcp --permanent
</code></pre>
<h2 id="移除端口">移除端口</h2>
<pre><code class="language-bash">firewall-cmd --zone=public --remove-port=80/tcp --permanent
</code></pre>
<h2 id="重新加载">重新加载</h2>
<pre><code class="language-shell">firewall-cmd --reload
</code></pre>
]]></content>
    </entry>
</feed>